<div class="mx-auto max-w-full rounded-lg bg-white p-6 shadow dark:bg-slate-900 text-gray-500 dark:text-gray-300">
  <!-- Tabs -->
  <div class="border-b border-gray-200 dark:border-slate-700 mb-4">
    <ul class="flex text-sm font-medium">
      <li>
        <button
          class="py-2 px-4 focus:outline-none"
          onclick="showTab('editorTab')"
          id="editorTabButton"
        >
          Editor
        </button>
      </li>
      <li class="ml-2">
        <button
          class="py-2 px-4 focus:outline-none"
          onclick="showTab('previewTab')"
          id="previewTabButton"
        >
          Preview
        </button>
      </li>
	  <li class="justify-end ml-auto border-b-2 border-red-500">
		  <button class="py-2 px-4 focus:outline-none" onclick="savePage()">Save</button>
	  </li>
    </ul>
  </div>

  <!-- Editor Tab -->
  <div id="editorTab">
    <h1 class="text-2xl">{{ .Entry.Title }}</h1>
    <textarea
      id="editor"
      class="w-full h-full bg-slate-900 text-gray-200"
    >{{ .RawContent }}</textarea>
  </div>

  <!-- Preview Tab (initially hidden) -->
  <div id="previewTab" class="hidden">
    <div class="w-full h-full markdown-body" id="markdown-preview"></div>
  </div>
</div>

<script>
  function showTab(tabId) {
    // Hide both tabs
    document.getElementById('editorTab').classList.add('hidden');
    document.getElementById('previewTab').classList.add('hidden');

    // Show the selected tab
    document.getElementById(tabId).classList.remove('hidden');

    // OPTIONAL: If you want to handle tab button states (active/inactive styles):
    document.getElementById('editorTabButton').classList.remove('border-b-2', 'border-blue-500');
    document.getElementById('previewTabButton').classList.remove('border-b-2', 'border-blue-500');
    if (tabId === 'editorTab') {
      document.getElementById('editorTabButton').classList.add('border-b-2', 'border-blue-500');
    } else {
      document.getElementById('previewTabButton').classList.add('border-b-2', 'border-blue-500');
    }
  }

  // Optionally show Editor tab by default on page load:
  showTab('editorTab');
  document.addEventListener('DOMContentLoaded', function() {
	// initialize codemirror
	var editor = CodeMirror.fromTextArea(document.getElementById('editor'), {
		mode: 'markdown',
		lineNumbers: true,
		lineWrapping: true,
		matchBrackets: true,
		theme: 'midnight'
	});
	editor.setSize('100%', '100%');
	editor.on('change', function() {
		sendMarkdown(editor.getValue());
	});
	sendMarkdown(editor.getValue());
  });
</script>
